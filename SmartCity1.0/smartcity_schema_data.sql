-- MySQL Script generated by MySQL Workbench
-- Sat May 27 12:30:10 2017
-- Model: Smartcity    Version: 1.0
-- Author: Loan Lassalle
-- MySQL Workbench Forward Engineering

SET NAMES utf8;
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema smartcity
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `smartcity` ;

-- -----------------------------------------------------
-- Schema smartcity
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `smartcity` DEFAULT CHARACTER SET latin1 COLLATE latin1_general_ci ;
USE `smartcity` ;

-- -----------------------------------------------------
-- Table `smartcity`.`RubriqueParent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`RubriqueParent` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`RubriqueParent` (
  `idRubriqueParent` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomRubriqueParent` VARCHAR(20) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idRubriqueParent`),
  UNIQUE INDEX `idRubriqueParent_UNIQUE` (`idRubriqueParent` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`RubriqueEnfant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`RubriqueEnfant` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`RubriqueEnfant` (
  `idRubriqueEnfant` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idRubriqueParent` INT UNSIGNED NOT NULL,
  `nomRubriqueEnfant` VARCHAR(20) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idRubriqueEnfant`),
  UNIQUE INDEX `idRubriqueEnfant_UNIQUE` (`idRubriqueEnfant` ASC),
  INDEX `fk_RubriqueEnfant_RubriqueParent_idx` (`idRubriqueParent` ASC),
  CONSTRAINT `fk_RubriqueEnfant_RubriqueParent`
    FOREIGN KEY (`idRubriqueParent`)
    REFERENCES `smartcity`.`RubriqueParent` (`idRubriqueParent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Priorite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Priorite` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Priorite` (
  `idPriorite` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomPriorite` VARCHAR(45) NOT NULL,
  `niveau` TINYINT UNSIGNED NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPriorite`),
  UNIQUE INDEX `idPriorite_UNIQUE` (`idPriorite` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Statut`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Statut` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Statut` (
  `idStatut` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomStatut` VARCHAR(45) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idStatut`),
  UNIQUE INDEX `idStatut_UNIQUE` (`idStatut` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Rue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Rue` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Rue` (
  `idRue` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomRue` VARCHAR(45) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idRue`),
  UNIQUE INDEX `idRue_UNIQUE` (`idRue` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Npa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Npa` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Npa` (
  `idNpa` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `numeroNpa` VARCHAR(4) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNpa`),
  UNIQUE INDEX `idNpa_UNIQUE` (`idNpa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Adresse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Adresse` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Adresse` (
  `idAdresse` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idRue` INT UNSIGNED NOT NULL,
  `numeroDeRue` VARCHAR(4) NOT NULL,
  `idNpa` INT UNSIGNED NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAdresse`),
  UNIQUE INDEX `idAdresse_UNIQUE` (`idAdresse` ASC),
  INDEX `fk_Adresse_Rue1_idx` (`idRue` ASC),
  INDEX `fk_Adresse_Npa1_idx` (`idNpa` ASC),
  CONSTRAINT `fk_Adresse_Rue1`
    FOREIGN KEY (`idRue`)
    REFERENCES `smartcity`.`Rue` (`idRue`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Adresse_Npa1`
    FOREIGN KEY (`idNpa`)
    REFERENCES `smartcity`.`Npa` (`idNpa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`TitreCivil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`TitreCivil` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`TitreCivil` (
  `idTitreCivil` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `titre` VARCHAR(45) NOT NULL,
  `abreviation` VARCHAR(6) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTitreCivil`),
  UNIQUE INDEX `idTitreCivil_UNIQUE` (`idTitreCivil` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Nationalite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Nationalite` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Nationalite` (
  `idNationalite` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomNationalite` VARCHAR(45) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNationalite`),
  UNIQUE INDEX `idNationalite_UNIQUE` (`idNationalite` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Sexe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Sexe` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Sexe` (
  `idSexe` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nomSexe` VARCHAR(45) NOT NULL,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idSexe`),
  UNIQUE INDEX `idSexe_UNIQUE` (`idSexe` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Utilisateur`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Utilisateur` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Utilisateur` (
  `idUtilisateur` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `personnePhysique` TINYINT(1) NOT NULL DEFAULT 1,
  `avs` VARCHAR(16) NULL,
  `idTitreCivil` INT UNSIGNED NOT NULL,
  `nomUtilisateur` VARCHAR(90) NOT NULL,
  `prenom` VARCHAR(90) NULL,
  `dateDeNaissance` TIMESTAMP NULL,
  `idSexe` INT UNSIGNED NULL,
  `idNationalite` INT UNSIGNED NULL,
  `idAdresse` INT UNSIGNED NOT NULL,
  `email` VARCHAR(254) NOT NULL,
  `pseudo` VARCHAR(90) NOT NULL,
  `motDePasse` VARCHAR(32) NOT NULL,
  `sel` VARCHAR(32) NOT NULL,
  `creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUtilisateur`),
  UNIQUE INDEX `idUtilisateur_UNIQUE` (`idUtilisateur` ASC),
  INDEX `fk_Utilisateur_Adresse1_idx` (`idAdresse` ASC),
  INDEX `fk_Utilisateur_TitreCivil1_idx` (`idTitreCivil` ASC),
  INDEX `fk_Utilisateur_Nationalite1_idx` (`idNationalite` ASC),
  INDEX `fk_Utilisateur_Sexe1_idx` (`idSexe` ASC),
  CONSTRAINT `fk_Utilisateur_Adresse1`
    FOREIGN KEY (`idAdresse`)
    REFERENCES `smartcity`.`Adresse` (`idAdresse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Utilisateur_TitreCivil1`
    FOREIGN KEY (`idTitreCivil`)
    REFERENCES `smartcity`.`TitreCivil` (`idTitreCivil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Utilisateur_Nationalite1`
    FOREIGN KEY (`idNationalite`)
    REFERENCES `smartcity`.`Nationalite` (`idNationalite`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Utilisateur_Sexe1`
    FOREIGN KEY (`idSexe`)
    REFERENCES `smartcity`.`Sexe` (`idSexe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Evenement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Evenement` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Evenement` (
  `idEvenement` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idRubriqueEnfant` INT UNSIGNED NOT NULL,
  `idUtilisateur` INT UNSIGNED NOT NULL,
  `nomEvenement` VARCHAR(90) NOT NULL,
  `idAdresse` INT UNSIGNED NULL,
  `latitude` DOUBLE NULL,
  `longitude` DOUBLE NULL,
  `debut` TIMESTAMP NULL,
  `fin` TIMESTAMP NULL,
  `details` TEXT NULL,
  `idPriorite` INT UNSIGNED NOT NULL,
  `idStatut` INT UNSIGNED NOT NULL,
  `creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEvenement`),
  INDEX `fk_Evenement_RubriqueEnfant1_idx` (`idRubriqueEnfant` ASC),
  INDEX `fk_Evenement_Priorite1_idx` (`idPriorite` ASC),
  INDEX `fk_Evenement_Statut1_idx` (`idStatut` ASC),
  INDEX `fk_Evenement_Utilisateur1_idx` (`idUtilisateur` ASC),
  UNIQUE INDEX `idEvenement_UNIQUE` (`idEvenement` ASC),
  INDEX `fk_Evenement_Adresse1_idx` (`idAdresse` ASC),
  CONSTRAINT `fk_Evenement_RubriqueEnfant1`
    FOREIGN KEY (`idRubriqueEnfant`)
    REFERENCES `smartcity`.`RubriqueEnfant` (`idRubriqueEnfant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evenement_Priorite1`
    FOREIGN KEY (`idPriorite`)
    REFERENCES `smartcity`.`Priorite` (`idPriorite`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evenement_Statut1`
    FOREIGN KEY (`idStatut`)
    REFERENCES `smartcity`.`Statut` (`idStatut`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evenement_Utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `smartcity`.`Utilisateur` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Evenement_Adresse1`
    FOREIGN KEY (`idAdresse`)
    REFERENCES `smartcity`.`Adresse` (`idAdresse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Commentaire`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Commentaire` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Commentaire` (
  `idEvenement` INT UNSIGNED NOT NULL,
  `idUtilisateur` INT UNSIGNED NOT NULL,
  `commentaire` TEXT NOT NULL,
  `creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `derniereMiseAJour` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEvenement`, `idUtilisateur`),
  INDEX `fk_Commentaire_Evenement1_idx` (`idEvenement` ASC),
  INDEX `fk_Commentaire_Utilisateur1_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_Commentaire_Utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `smartcity`.`Utilisateur` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Commentaire_Evenement1`
    FOREIGN KEY (`idEvenement`)
    REFERENCES `smartcity`.`Evenement` (`idEvenement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartcity`.`Confiance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartcity`.`Confiance` ;

CREATE TABLE IF NOT EXISTS `smartcity`.`Confiance` (
  `idUtilisateur` INT UNSIGNED NOT NULL,
  `idRubriqueEnfant` INT UNSIGNED NOT NULL,
  `creation` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUtilisateur`, `idRubriqueEnfant`),
  INDEX `fk_Confiance_RubriqueEnfant1_idx` (`idRubriqueEnfant` ASC),
  INDEX `fk_Confiance_Utilisateur1_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_Confiance_Utilisateur1`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `smartcity`.`Utilisateur` (`idUtilisateur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Confiance_RubriqueEnfant1`
    FOREIGN KEY (`idRubriqueEnfant`)
    REFERENCES `smartcity`.`RubriqueEnfant` (`idRubriqueEnfant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `smartcity` ;

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`detailsDesEvenements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`detailsDesEvenements` (`idEvenement` INT, `nomEvenement` INT, `nomRubriqueEnfant` INT, `nomRubriqueParent` INT, `nomRue` INT, `numeroDeRue` INT, `numeroNpa` INT, `latitude` INT, `longitude` INT, `debut` INT, `fin` INT, `details` INT, `nomPriorite` INT, `niveau` INT, `nomStatut` INT, `idUtilisateur` INT, `pseudo` INT, `creation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`utilisateursDeConfiance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`utilisateursDeConfiance` (`idRubriqueEnfant` INT, `nomRubriqueEnfant` INT, `nomRubriqueParent` INT, `idUtilisateur` INT, `personnePhysique` INT, `abreviation` INT, `nomUtilisateur` INT, `prenom` INT, `email` INT, `pseudo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`rubriquesEnfantsParents`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`rubriquesEnfantsParents` (`idRubriqueEnfant` INT, `nomRubriqueEnfant` INT, `nomRubriqueParent` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`evenementsUtilisateurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`evenementsUtilisateurs` (`idEvenement` INT, `nomEvenement` INT, `nomRubriqueEnfant` INT, `nomRubriqueParent` INT, `nomRue` INT, `numeroDeRue` INT, `numeroNpa` INT, `debut` INT, `fin` INT, `nomPriorite` INT, `niveau` INT, `nomStatut` INT, `idUtilisateur` INT, `pseudo` INT, `commentaire` INT, `creation` INT, `derniereMiseAJour` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`detailsUtilisateurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`detailsUtilisateurs` (`idutilisateur` INT, `AVS` INT, `personnePhysique` INT, `abreviation` INT, `nomUtilisateur` INT, `prenom` INT, `dateDeNaissance` INT, `nomSexe` INT, `nomNationalite` INT, `nomRue` INT, `numeroDeRue` INT, `numeroNpa` INT, `email` INT, `pseudo` INT, `creation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`detailsAdresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`detailsAdresses` (`idAdresse` INT, `nomRue` INT, `numeroDeRue` INT, `numeroNpa` INT);

-- -----------------------------------------------------
-- Placeholder table for view `smartcity`.`pseudosMotsDePasse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `smartcity`.`pseudosMotsDePasse` (`pseudo` INT, `motDePasse` INT, `sel` INT, `creation` INT, `derniereMiseAJour` INT);

-- -----------------------------------------------------
-- View `smartcity`.`detailsDesEvenements`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`detailsDesEvenements` ;
DROP TABLE IF EXISTS `smartcity`.`detailsDesEvenements`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `detailsDesEvenements` AS
	SELECT
		eve.idEvenement,
        eve.nomEvenement,
		re.nomRubriqueEnfant,
        rp.nomRubriqueParent,
        rue.nomRue,
        adr.numeroDeRue,
        npa.numeroNpa,
        eve.latitude,
        eve.longitude,
        eve.debut,
        eve.fin,
        eve.details,
        pri.nomPriorite,
        pri.niveau,
        sta.nomStatut,
        uti.idUtilisateur,
        uti.pseudo,
        eve.creation
	FROM
		Evenement AS eve
			INNER JOIN
		RubriqueEnfant AS re ON eve.idRubriqueEnfant = re.idRubriqueEnfant
			INNER JOIN
		RubriqueParent AS rp ON re.idRubriqueParent = rp.idRubriqueParent
			INNER JOIN
		Adresse AS adr ON eve.idAdresse = adr.idAdresse
			INNER JOIN
		Rue AS rue ON adr.idRue = rue.idRue
			INNER JOIN
		Npa AS npa ON adr.idNpa = npa.idNpa
			INNER JOIN
		Priorite AS pri ON eve.idPriorite = pri.idPriorite
			INNER JOIN
		Statut AS sta ON eve.idStatut = sta.idStatut
			INNER JOIN
		Utilisateur AS uti ON eve.idUtilisateur = uti.idUtilisateur;

-- -----------------------------------------------------
-- View `smartcity`.`utilisateursDeConfiance`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`utilisateursDeConfiance` ;
DROP TABLE IF EXISTS `smartcity`.`utilisateursDeConfiance`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `utilisateursDeConfiance` AS
	SELECT
		re.idRubriqueEnfant,
        re.nomRubriqueEnfant,
		rp.nomRubriqueParent,
		uti.idUtilisateur,
        uti.personnePhysique,
        tc.abreviation,
		uti.nomUtilisateur,
        uti.prenom,
        uti.email,
        uti.pseudo
	FROM
		Confiance AS con
			INNER JOIN
		Utilisateur AS uti ON con.idUtilisateur = uti.idUtilisateur
			INNER JOIN
		RubriqueEnfant AS re ON con.idRubriqueEnfant = re.idRubriqueEnfant
			INNER JOIN
		RubriqueParent AS rp ON re.idRubriqueParent = rp.idRubriqueParent
			INNER JOIN
		TitreCivil AS tc ON uti.idTitreCivil = tc.idTitreCivil;

-- -----------------------------------------------------
-- View `smartcity`.`rubriquesEnfantsParents`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`rubriquesEnfantsParents` ;
DROP TABLE IF EXISTS `smartcity`.`rubriquesEnfantsParents`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `rubriquesEnfantsParents` AS
	SELECT
		re.idRubriqueEnfant,
        re.nomRubriqueEnfant,
		rp.nomRubriqueParent
	FROM RubriqueEnfant AS re
		INNER JOIN
	RubriqueParent AS rp ON re.idRubriqueParent = rp.idRubriqueParent;

-- -----------------------------------------------------
-- View `smartcity`.`evenementsUtilisateurs`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`evenementsUtilisateurs` ;
DROP TABLE IF EXISTS `smartcity`.`evenementsUtilisateurs`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `evenementsUtilisateurs` AS
	SELECT
		eve.idEvenement,
        eve.nomEvenement,
        re.nomRubriqueEnfant,
		rp.nomRubriqueParent,
        rue.nomRue,
        adr.numeroDeRue,
        npa.numeroNpa,
        eve.debut,
        eve.fin,
        pri.nomPriorite,
        pri.niveau,
        sta.nomStatut,
        uti.idUtilisateur,
        uti.pseudo,
        com.commentaire,
        com.creation,
        com.derniereMiseAJour
	FROM
		Commentaire AS com
			INNER JOIN
		Evenement AS eve ON com.idEvenement = eve.idEvenement
			INNER JOIN
		Utilisateur AS uti ON com.idUtilisateur = uti.idUtilisateur
			INNER JOIN
		RubriqueEnfant AS re ON eve.idRubriqueEnfant = re.idRubriqueEnfant
			INNER JOIN
		RubriqueParent AS rp ON re.idRubriqueParent = rp.idRubriqueParent
			INNER JOIN
		Adresse AS adr ON eve.idAdresse = adr.idAdresse
			INNER JOIN
		Rue AS rue ON adr.idRue = rue.idRue
			INNER JOIN
		Npa AS npa ON adr.idNpa = npa.idNpa
			INNER JOIN
		Priorite AS pri ON eve.idPriorite = pri.idPriorite
			INNER JOIN
		Statut AS sta ON eve.idStatut = sta.idStatut;

-- -----------------------------------------------------
-- View `smartcity`.`detailsUtilisateurs`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`detailsUtilisateurs` ;
DROP TABLE IF EXISTS `smartcity`.`detailsUtilisateurs`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `detailsUtilisateurs` AS
	SELECT
		uti.idutilisateur,
        uti.AVS,
        uti.personnePhysique,
        tc.abreviation,
        uti.nomUtilisateur,
        uti.prenom,
        uti.dateDeNaissance,
        sex.nomSexe,
        nat.nomNationalite,
        rue.nomRue,
        adr.numeroDeRue,
        npa.numeroNpa,
        uti.email,
        uti.pseudo,
        uti.creation
	FROM
		Utilisateur AS uti
			INNER JOIN
		TitreCivil AS tc ON uti.idTitreCivil = tc.idTitreCivil
			INNER JOIN
		Sexe AS sex ON uti.idSexe = sex.idSexe
			INNER JOIN
		Nationalite AS nat ON uti.idNationalite = nat.idNationalite
			INNER JOIN
		Adresse AS adr ON uti.idAdresse = adr.idAdresse
			INNER JOIN
		Rue AS rue ON adr.idRue = rue.idRue
			INNER JOIN
		Npa AS npa ON adr.idNpa = npa.idNpa;

-- -----------------------------------------------------
-- View `smartcity`.`detailsAdresses`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`detailsAdresses` ;
DROP TABLE IF EXISTS `smartcity`.`detailsAdresses`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `detailsAdresses` AS
	SELECT
		adr.idAdresse,
        rue.nomRue,
        adr.numeroDeRue,
        npa.numeroNpa
	FROM
		Adresse AS adr
			INNER JOIN
		Rue AS rue ON adr.idRue = rue.idRue
			INNER JOIN
        Npa AS npa ON adr.idNpa = npa.idNpa;

-- -----------------------------------------------------
-- View `smartcity`.`pseudosMotsDePasse`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `smartcity`.`pseudosMotsDePasse` ;
DROP TABLE IF EXISTS `smartcity`.`pseudosMotsDePasse`;
USE `smartcity`;
CREATE  OR REPLACE VIEW `pseudosMotsDePasse` AS
	SELECT
		uti.pseudo,
        uti.motDePasse,
        uti.sel,
        uti.creation,
        uti.derniereMiseAJour
	FROM Utilisateur AS uti;
USE `smartcity`;

DELIMITER $$

USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`RubriqueParent_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`RubriqueParent_BEFORE_INSERT` BEFORE INSERT ON `RubriqueParent` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`RubriqueParent_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`RubriqueParent_BEFORE_UPDATE` BEFORE UPDATE ON `RubriqueParent` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`RubriqueEnfant_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`RubriqueEnfant_BEFORE_INSERT` BEFORE INSERT ON `RubriqueEnfant` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`RubriqueEnfant_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`RubriqueEnfant_BEFORE_UPDATE` BEFORE UPDATE ON `RubriqueEnfant` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Priorite_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Priorite_BEFORE_INSERT` BEFORE INSERT ON `Priorite` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Priorite_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Priorite_BEFORE_UPDATE` BEFORE UPDATE ON `Priorite` FOR EACH ROW
BEGIN    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Statut_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Statut_BEFORE_INSERT` BEFORE INSERT ON `Statut` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Statut_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Statut_BEFORE_UPDATE` BEFORE UPDATE ON `Statut` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Rue_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Rue_BEFORE_INSERT` BEFORE INSERT ON `Rue` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'Value of derniereMiseAJour is not in range';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Rue_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Rue_BEFORE_UPDATE` BEFORE UPDATE ON `Rue` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'Value of derniereMiseAJour is not in range';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Npa_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Npa_BEFORE_INSERT` BEFORE INSERT ON `Npa` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.numeroNpa NOT RLIKE '[0-9]')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'numeroNpa n\'est pas un nombre';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Npa_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Npa_BEFORE_UPDATE` BEFORE UPDATE ON `Npa` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.numeroNpa NOT RLIKE '[0-9]')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'numeroNpa n\'est pas un nombre';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Adresse_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Adresse_BEFORE_INSERT` BEFORE INSERT ON `Adresse` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.numeroDeRue NOT RLIKE '[0-9]')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'numeroDeRue n\'est pas un nombre';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Adresse_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Adresse_BEFORE_UPDATE` BEFORE UPDATE ON `Adresse` FOR EACH ROW
BEGIN
	IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.numeroDeRue NOT RLIKE '[0-9]')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'numeroDeRue n\'est pas un nombre';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`TitreCivil_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`TitreCivil_BEFORE_INSERT` BEFORE INSERT ON `TitreCivil` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`TitreCivil_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`TitreCivil_BEFORE_UPDATE` BEFORE UPDATE ON `TitreCivil` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Nationalite_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Nationalite_BEFORE_INSERT` BEFORE INSERT ON `Nationalite` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Nationalite_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Nationalite_BEFORE_UPDATE` BEFORE UPDATE ON `Nationalite` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Sexe_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Sexe_BEFORE_INSERT` BEFORE INSERT ON `Sexe` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Sexe_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Sexe_BEFORE_UPDATE` BEFORE UPDATE ON `Sexe` FOR EACH ROW
BEGIN
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Utilisateur_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Utilisateur_BEFORE_INSERT` BEFORE INSERT ON `Utilisateur` FOR EACH ROW
BEGIN
	IF (NEW.personnePhysique AND (NEW.avs IS NULL OR NEW.prenom IS NULL OR NEW.dateDeNaissance IS NULL OR NEW.idSexe IS NULL OR NEW.idNationalite IS NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'personnePhysique est VRAI mais avs, prenom, dateDeNaissance, idSexe ou idNationalite sont NULL';
	ELSEIF (NOT(NEW.personnePhysique) AND (NEW.avs IS NOT NULL OR NEW.prenom IS NOT NULL OR NEW.dateDeNaissance IS NOT NULL OR NEW.idSexe IS NOT NULL OR NEW.idNationalite IS NOT NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'personnePhysique est FAUX mais avs, prenom, dateDeNaissance, idSexe ou idNationalite sont NON NULL';    
	END IF;
    
    IF (NEW.creation < '1970-01-01 00:00:01' AND NEW.creation > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.creation = CURRENT_TIMESTAMP;
	END IF;
    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
    IF (NEW.dateDeNaissance < '1970-01-01 00:00:01' AND NEW.dateDeNaissance > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'dateDeNaissance n\'est pas dans l\'intervalle de temps';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Utilisateur_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Utilisateur_BEFORE_UPDATE` BEFORE UPDATE ON `Utilisateur` FOR EACH ROW
BEGIN
	IF (NEW.personnePhysique AND (NEW.avs IS NULL OR NEW.prenom IS NULL OR NEW.dateDeNaissance IS NULL OR NEW.idSexe IS NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'personnePhysique est VRAI mais avs, prenom, dateDeNaissance ou idSexe sont NULL';
	ELSEIF (NOT(NEW.personnePhysique) AND (NEW.avs IS NOT NULL OR NEW.prenom IS NOT NULL OR NEW.dateDeNaissance IS NOT NULL OR NEW.idSexe IS NOT NULL OR NEW.idNationalite IS NOT NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'personnePhysique est FAUX mais avs, prenom, dateDeNaissance ou idSexe sont NON NULL';    
	END IF;
    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.creation <> OLD.creation)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation ne peut pas être modifiée';
	END IF;
    
    IF (NEW.dateDeNaissance < '1970-01-01 00:00:01' AND NEW.dateDeNaissance > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'dateDeNaissance n\'est pas dans l\'intervalle de temps';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Evenement_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Evenement_BEFORE_INSERT` BEFORE INSERT ON `Evenement` FOR EACH ROW
BEGIN
	IF (NEW.idAdresse IS NULL AND (NEW.latitude IS NULL OR NEW.longitude IS NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'idAdresse ou latitude et longitude sont NULL';
	END IF;
    
    IF (NEW.creation < '1970-01-01 00:00:01' AND NEW.creation > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.creation = CURRENT_TIMESTAMP;
	END IF;
    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
    IF (NEW.debut IS NULL)
    THEN
		SET NEW.debut = CURRENT_DATE();
	END IF;
    
    IF (NEW.debut < '1970-01-01 00:00:01' AND NEW.debut > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'debut n\'est pas dans l\'intervalle de temps';
	END IF;
    
    IF (NEW.fin IS NULL)
    THEN
		SET NEW.fin = CURRENT_DATE() + INTERVAL 1 WEEK;
	END IF;
    
    IF (NEW.fin < '1970-01-01 00:00:01' AND NEW.fin > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'fin n\'est pas dans l\'intervalle de temps';
	END IF;
    
    IF (NEW.debut >= NEW.fin)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'debut supérieur ou égal à fin';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Evenement_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Evenement_BEFORE_UPDATE` BEFORE UPDATE ON `Evenement` FOR EACH ROW
BEGIN
	IF (NEW.idAdresse IS NULL AND (NEW.latitude IS NULL OR NEW.longitude IS NULL))
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'idAdresse ou latitude et longitude sont NULL';
	END IF;
    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.creation <> OLD.creation)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation ne peut pas être modifiée';
	END IF;
    
    IF (NEW.debut IS NULL)
    THEN
		SET NEW.debut = CURRENT_DATE();
	END IF;
    
    IF (NEW.fin IS NULL)
    THEN
		SET NEW.fin = CURRENT_DATE() + INTERVAL 1 WEEK;
	END IF;
    
    IF (NEW.debut >= NEW.fin OR OLD.debut >= NEW.fin OR NEW.debut >= OLD.fin OR OLD.debut >= OLD.fin)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'debut supérieur ou égal à fin';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Commentaire_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Commentaire_BEFORE_INSERT` BEFORE INSERT ON `Commentaire` FOR EACH ROW
BEGIN
    IF (NEW.creation < '1970-01-01 00:00:01' AND NEW.creation > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.creation = CURRENT_TIMESTAMP;
	END IF;
    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Commentaire_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Commentaire_BEFORE_UPDATE` BEFORE UPDATE ON `Commentaire` FOR EACH ROW
BEGIN    
    IF (NEW.derniereMiseAJour < '1970-01-01 00:00:01' AND NEW.derniereMiseAJour > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'derniereMiseAJour n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.derniereMiseAJour = CURRENT_TIMESTAMP;
	END IF;
    
	IF (NEW.creation <> OLD.creation)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation ne peut pas être modifiée';
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Confiance_BEFORE_INSERT` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Confiance_BEFORE_INSERT` BEFORE INSERT ON `Confiance` FOR EACH ROW
BEGIN
	IF (NEW.creation < '1970-01-01 00:00:01' AND NEW.creation > '2038-01-19 03:14:07')
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation n\'est pas dans l\'intervalle de temps';
	ELSE
		SET NEW.creation = CURRENT_TIMESTAMP;
	END IF;
END$$


USE `smartcity`$$
DROP TRIGGER IF EXISTS `smartcity`.`Confiance_BEFORE_UPDATE` $$
USE `smartcity`$$
CREATE DEFINER = CURRENT_USER TRIGGER `smartcity`.`Confiance_BEFORE_UPDATE` BEFORE UPDATE ON `Confiance` FOR EACH ROW
BEGIN
	IF (NEW.creation <> OLD.creation)
    THEN
		SIGNAL SQLSTATE '44000'
			SET MESSAGE_TEXT = 'creation ne peut pas être modifiée';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Smartcity Database Data
--
-- MySQL Script generated by MySQL Workbench
-- Sun Apr  2 12:27:15 2017
-- Model: Smartcity    Version: 1.0
-- Author: Loan Lassalle
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- POPULATING TABLES

-- -----------------------------------------------------
-- Schema smartcity
-- -----------------------------------------------------
USE `smartcity` ;

-- -----------------------------------------------------
-- Table `smartcity`.`RubriqueParent`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`RubriqueParent` (`nomRubriqueParent`) VALUES 
('trafic'),('manifestation'),('chantiers'),('doléances');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`RubriqueEnfant`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`RubriqueEnfant` (`idRubriqueParent`,`nomRubriqueEnfant`) VALUES 
(1,'accidents'),(1,'travaux'),(2,'manifestations'),(3,'rénovations'),
(3,'constructions'),(4,'doléances');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Priorite`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Priorite` (`nomPriorite`,`niveau`) VALUES 
('mineur',0),('gênant',1),('préocupant',2),('important',3),('urgent',4);
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Statut`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Statut` (`nomStatut`) VALUES 
('en attente'),('traité'),('refusé');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Rue`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Rue` (`nomRue`) VALUES 
('rue adrien-pichard'),('rue auguste-piclou'),('avenue des acacias'),('rue de l’académie'),
('avenue agassiz'),('rue de l’ale'),('avenue des alpes'),('avenue andré schnetzler'),
('avenue andré schnetzler');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`NPA`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Npa` (`numeroNpa`) VALUES 
('1000'),('1001'),('1002'),('1003'),
('1004'),('1005'),('1006'),('1007'),
('1010'),('1011'),('1012'),('1015'),
('1018');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Adresse`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Adresse` (`idRue`,`numeroDeRue`,`idNpa`) VALUES 
(1,'1',1),(1,'2',1),(1,'3',1),(1,'4',1),
(1,'5',1),(1,'6',1),(2,'7',2),(2,'8',2),
(2,'9',2),(2,'10',2),(2,'11',2),(2,'12',2),
(3,'13',5),(4,'14',5),(5,'15',2),(6,'16',6),
(7,'17',7),(8,'18',7);
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`TitreCivil`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`TitreCivil` (`titre`,`abreviation`) VALUES 
('monsieur','m'),('madame','mme'),('mademoiselle','mlle'),('docteur','dr'),
('maître','me'),('professeur','pr'),('entreprise','ent');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Nationalite`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Nationalite` (`nomNationalite`) VALUES 
('afghane'),('albanaise'),('allemande'),('belge'),
('britanique'),('canadienne'),('espagnole'),('française'),
('italienne'),('russe'),('suisse'),('turque'),
('vietnamienne');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Sexe`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Sexe` (`nomSexe`) VALUES 
('homme'),('femme');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Utilisateur`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Utilisateur` (`personnePhysique`,`avs`,`idTitreCivil`,`nomUtilisateur`,`prenom`,`dateDeNaissance`,`idSexe`,`idNationalite`,`idAdresse`,`email`,`pseudo`,`motDePasse`,`sel`) VALUES 
(1,'756.1234.5678.97',1,'lassalle','loan',CURDATE(),1,7,1,'loan.lassalle@heig-vd.ch','loan.lassalle','_smartcity_','3EgLiQyssGvABUUaqFGUZgrDKGPOlA'),
(0,NULL,7,'touring club suisse',NULL,NULL,NULL,NULL,1,'contact-tcs@tcs.ch','contact-tcs','contact-tcs','CG5bWHG0YxOvABUUaF8ra0HQvvJXr7');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Evenement`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Evenement` 
(`idRubriqueEnfant`,`idUtilisateur`,`nomEvenement`,`idAdresse`,`latitude`,`longitude`,`debut`,`fin`,`details`,`idPriorite`,`idStatut`) VALUES
-- Accidents traités
(1,2,'Entrée autoroute bloqué',1,46.52304, 6.58939,NULL,NULL,'Une voiture s\'est encastrée dans un bus',5,2),
(1,1,'Tunnel Malley fermé',1,46.52651,6.60319,NULL,NULL,'Deux voitures ont fait un frontal, le tunnel est fermé',5,2),

-- Travaux traités
(2,1,'Rond-point du Mont-D\'or',1,46.51665,6.61917,NULL,NULL,'Construction d\'un nouveau rond-point. Le trafic est ralenti. Les travaux dureront tout le mois. Les conducteurs vont devoir s\'armer de patience.',1,2),
(2,1,'Canalisations Malley',1,46.52773,6.60227,NULL,NULL,'Les canalisations doivent être refaites. Les travaux seront effectés de nuit, des nuisances sonores noctures pourraient donc déranger les personnes avec un sommeil léger.',2,2),
(2,1,'Gare Bussigny',1,46.54758,6.55193,NULL,NULL,'Des travaux sont en cours à la gare de Bussigny. Des retards et des suppresions de trains sont à prévoir. Rester vigileants.',4,2),
(2,1,'Rond-point Ouchy',1,46.50761,6.625,CURRENT_DATE() - INTERVAL 20 DAY,CURRENT_DATE() - INTERVAL 5 DAY,'Construction d\'un rond-point, trafic ralenti',2,2),
(2,1,'Rond-point géant Dapples',1,46.51514,6.62541,CURRENT_DATE(), CURRENT_DATE() + INTERVAL 6 MONTH,'Construction d\'un rond point géant, trafic ralenti',3,2),
(2,1,'Feux rouges Beaulieu',1,46.52859,6.62699,CURRENT_DATE() + INTERVAL 2 WEEK, CURRENT_DATE() + INTERVAL 3 WEEK,'Installation des Rond-point',3,2),
(2,1,'Dos d\'âne Place Chaudron',1,46.52199,6.62371,CURRENT_DATE() + INTERVAL 2 DAY, CURRENT_DATE() + INTERVAL 4 DAY,'Construction d\'un dos d\'âne avant le pont de Chauderon',2,2),
(2,1,'Petit rond-point Chailly',1,46.52669,6.65137,NULL,NULL,'Construction d\'un petit rond-point, trafic ralenti',2,2),
(2,1,'Canalisations Bellvaux',1,46.52628,6.65189,CURRENT_DATE() + INTERVAL 7 MONTH, CURRENT_DATE() + INTERVAL 8 MONTH,'Construction de nouvelles canalisations de gaz',2,2),
(2,1,'Central hydroélectrique',1,46.52125,6.6518,CURRENT_DATE(), CURRENT_DATE() + INTERVAL 2 YEAR,'Construction d\'un barrage hydroélectrique',1,2),
(2,1,'Port de Vidy',1,46.51174,6.60628,CURRENT_DATE() + INTERVAL 6 MONTH,CURRENT_DATE() + INTERVAL 11 MONTH,'Agrandissement du port de Vidy',4,2),
(2,1,'Déforestation',1,46.5353,6.62736,NULL,NULL,'Déforestation pour faire de la places',2,2),
(2,1,'Stade olympique',1,46.53318,6.62434,CURRENT_DATE() - INTERVAL 2 MONTH,CURRENT_DATE() - INTERVAL 1 MONTH,'Construction d\'un toit',1,2),

-- Travaux en attentes
(2,1,'Travaux de pavement',1,46.5223,6.63057,CURRENT_DATE() + INTERVAL 3 DAY,CURRENT_DATE() + INTERVAL 6 DAY,'Construction d\'un chemin pavé',3,1),
(2,1,'Piste d\'attérissage',1,46.54784,6.61767,CURRENT_DATE() + INTERVAL 4 MONTH,CURRENT_DATE() + INTERVAL 12 MONTH,'Construction d\'une piste d\'attérissage pour l\'A380',1,1),
(2,1,'Station de vélos de prêt',1,46.51391,6.65409,CURRENT_DATE() + INTERVAL 4 WEEK,CURRENT_DATE() + INTERVAL 8 WEEK,'Agrandissement de la station de vélos de prêt',1,1),

-- Manifestations traitées
(3,1,'WWF',1,46.52073,6.63069,NULL,NULL,'Un camps avec des tentes ont été installé par les manifestants. La circulation n\'a pas été perturbée. Sauvez les pandas !',2,2),
(3,1,'Piscine pour tous',1,46.53027,6.58497,NULL,NULL,'La piscine municipale de Renens est ouverte à tous et toutes gratuitement pour toute la journée.',1,2),
(3,1,'Concert',1,46.50691,6.62516,NULL,NULL,'Un concert est organisé à Ouchy. Plusieurs artistes vont chanter et danser toute la nuit. Venez nombreux !',1,2),
(3,1,'Anti Donald Trump',1,46.52225,6.63056,NULL,NULL,'Un cortège passera en ville pour manifester contre le président des USA',5,2),
(3,1,'Journée du vélo',1,46.56399,6.69288,CURRENT_DATE() - INTERVAL 3 DAY,CURRENT_DATE() + INTERVAL 6 DAY,'Journée Lausannoise du vélo 2017',1,2),
(3,1,'Wake up and run',1,46.52075,6.6315,NULL,NULL,'Wake up and run à Lausanne - Esplanable de Montbenon',1,2),
(3,1,'Fit & brunch',1,46.50799,6.61748,CURRENT_DATE() + INTERVAL 2 DAY,CURRENT_DATE() + INTERVAL 5 DAY,'Fit & brunch 2017 - Lausanne à table',1,2),
(3,1,'Cérémonie de remise',1,46.52438, 6.6379,NULL,NULL,'Cérémonie de remise du Prix Bibliomedia 2017',1,2),
(3,1,'Surfing dinner rallye',1,46.52261,6.63526,CURRENT_DATE() + INTERVAL 2 DAY,CURRENT_DATE() + INTERVAL 5 DAY,'Surfing dinner rallye 2017 - lausanne à table',1,2),
(3,1,'MLes puces du cpo',1,46.50863,6.62759,CURRENT_DATE() + INTERVAL 8 WEEK,CURRENT_DATE() + INTERVAL 10 WEEK, 'Désormais le CPO ouvre son espace brocante chaque semaine.',1,2),
(3,1,'Ca c\'est du jeu !',1,46.52494,6.62147,NULL,NULL,'Venez jouer en famille',1,2),
(3,1,'Les pieds dans l\'eau, la tête dans les livres',1,46.51144,6.61405,CURRENT_DATE() + INTERVAL 2 WEEK,CURRENT_DATE() + INTERVAL 3 WEEK,'Venez passer un moment de détente au milieu des livres entre deux baignades.',1,2),
(3,1,'Des livres et des brouettes',1,46.52369,6.62373,CURRENT_DATE() + INTERVAL 9 DAY,CURRENT_DATE() + INTERVAL 14 DAY,'Lecture au Parc de la Brouette',1,2),
(3,1,'A vos bobines ! - en balade',1,46.5293,6.6112,CURRENT_DATE() + INTERVAL 14 WEEK,CURRENT_DATE() + INTERVAL 17 WEEK,'Atelier autour du livre et du cinéma à l\'Esplanade du parc de Valency, en partenariat avec Les Bobines de Valency',1,2),
(3,1,'A vos bobines ! - face caméra',1,46.52029,6.62497,NULL,NULL,'Atelier cinéma au Casino de Montbenon en collaboration avec Les Bobines de Valency',1,2),
(3,1,'Apéro tricot',1,46.52021,6.63298,NULL,NULL,'Le tricot se mêle à l\'apéro au Café Chez Elle. De fil en aiguille, les verres s\'enchaînent !',1,2),
(3,1,'Ateliers chocolat',1,46.51818,6.63787,CURRENT_DATE() + INTERVAL 4 MONTH,CURRENT_DATE() + INTERVAL 5 MONTH,'Cet été, découvrez tous les secrets de fabrication du chocolat, à la Confiserie Nessi, durant leurs ateliers !',1,2),
(3,1,'Pique-nique',1,46.52024,6.62554,NULL,NULL,'Le plus célèbre des piques-niques de la ville fête le pays de la plus gourmande des manières : les pieds dans l\'herbe de Montbenon, les yeux face au Léman et le panier rempli de délectations du terroir !',1,2),

-- Manifestations en attentes
(3,1,'La famille, entre verticalité et horizontalité',1,46.52316,6.62668,CURRENT_DATE() + INTERVAL 1 MONTH,CURRENT_DATE() + INTERVAL 2 MONTH,'Une conférence sur l\'évolution de la famille par Gérard Salem',1,1),
(3,1,'Cours de sculpture et modelage',1,46.52419,6.6496,CURRENT_DATE() + INTERVAL 2 MONTH,CURRENT_DATE() + INTERVAL 3 MONTH,'Sculpture sur argile, taille de pierre tendre, plâtre, béton cellulaire…',1,1),
(3,1,'Les balades du goût ',1,46.5171,6.63235,CURRENT_DATE() + INTERVAL 10 DAY,CURRENT_DATE() + INTERVAL 20 DAY,'Les lieux emblématiques de Lausanne et les arbres de la ville. Une promenade idéale pour toute la famille !',1,1),
(3,1,'Cultive ton cocktail',1,46.52324,6.63205,CURRENT_DATE() + INTERVAL 7 DAY,CURRENT_DATE() + INTERVAL 10 DAY,'Le Pavillon Bar&Kitchen de la Riponne vous propose un atelier entre terre et verre ',1,1),
(3,1,'Imagine et dessine ton histoire',1,46.51443,6.62548,CURRENT_DATE() + INTERVAL 3 WEEK,CURRENT_DATE() + INTERVAL 4 WEEK,'Atelier kamishibaï avec le dessinateur et conteur David Telese',1,1),

-- Rénovation traitées
(4,1,'Façade de la gare',1,46.51717,6.62923,NULL,NULL,'Pour un meilleure gestion des flux de passagers',2,2),
(4,1,'Salle de fitness à la prison du Bois-Mermet',1,46.53652,6.62657,NULL,NULL,'Pour augmenter le bonheur des citoyens',2,2),

-- Rénovation en attentes
(4,1,'Eglise Saint François',1,46.51969,6.63335,CURRENT_DATE() + INTERVAL 4 MONTH,CURRENT_DATE() + INTERVAL 7 MONTH,'Pour permettre l\'arriver de pelerins',2,1),
(4,1,'Cinéma du Flon',1,46.52026,6.63102,CURRENT_DATE() + INTERVAL 10 WEEK,CURRENT_DATE() + INTERVAL 17 WEEK,'Pour des fauteils allongés !',1,1),

-- Constructions traitées
(5,1,'Site de minage Bitcoin',1,46.52634,6.63606,NULL,NULL,'Construction d\'un batiment pour le minage de bitcoin',2,2),

-- Constructions en attentes
(5,1,'Usine Tesla',1,46.51662,6.60171,CURRENT_DATE() + INTERVAL 10 DAY,CURRENT_DATE() + INTERVAL 20 DAY,'Construction d\'une usine de batterie pour l\'entreprise Tesla',2,1),
(5,1,'Site de lancement de fusée Falcon 9',1,46.51129,6.61522,CURRENT_DATE() + INTERVAL 1 MONTH,CURRENT_DATE() + INTERVAL 2 YEAR,'Construction d\'un site de lancement de fusée Falcon 9 et Falcon Heavy',2,1),

-- Doléances traitées
(6,1,'Banc cassé',1,46.51716,6.60333,NULL,NULL,'Le banc en bois a été scié en deux',2,2),
(6,1,'Cabine téléphone HS',1,46.52322,6.63256,NULL,NULL,'Une personne mal intentionnée a arraché le téléphone de la cabine',2,2),

-- Doléances en attentes
(6,1,'Passage des éboueurs',1,46.51855,6.63395,NULL,CURRENT_DATE() + INTERVAL 1 DAY,'Les poubelles débordent !!',5,1),
(6,1,'Connexion à la fibre optique',1,46.52153,6.62849,NULL,CURRENT_DATE() + INTERVAL 1 MONTH,'Pour plus de compétitivités, la fibre optiques est nécessaire !',3,1);
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Commentaire`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Commentaire` (`idEvenement`,`idUtilisateur`,`commentaire`) VALUES 
(1,1,'début de l\'accident approximatif');
COMMIT;

-- -----------------------------------------------------
-- Table `smartcity`.`Confiance`
-- Dumping data
-- -----------------------------------------------------

SET AUTOCOMMIT=0;
INSERT INTO `smartcity`.`Confiance` (`idUtilisateur`,`idRubriqueEnfant`) VALUES 
(1,1),(1,2);
COMMIT;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
